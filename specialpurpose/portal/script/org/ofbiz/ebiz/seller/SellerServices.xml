<?xml version="1.0" encoding="UTF-8"?>     
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods-v2.xsd">

	<simple-method method-name="updatePartySellerStatus" short-description="update a Party Seller Status">
        
        <!-- call the service with the system account to get around security constraints for this special create -->
<!--         <entity-one entity-name="UserLogin" value-field="systemUserLogin" auto-field-map="false">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one> -->
        <now-timestamp field="nowStamp"/>
        <entity-one entity-name="Party" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <set from-field="nowStamp" field="lookedUpValue.examineDate"/>
        <store-value value-field="lookedUpValue"/>
        
        <entity-and list="userLoginList" entity-name="UserLogin">
        	<field-map field-name="partyId" value="parameters.partyId"/>
        </entity-and>
        <if-not-empty field="userLoginList">
        	<first-from-list list="userLoginList" entry="userLogin"/>
        	<set field="parameters.userLoginId" from-field="userLogin.userLoginId"/>
	        <if-compare operator="equals" value="SELLER_ACCEPTED" field="parameters.sellerStatusId">
	        	<set field="parameters.groupId" value="EBIZ_SELLER_PRD"/>
	        	<call-simple-method method-name="addUserLoginToSecurityGroup"></call-simple-method>
	        	
	        	<set field="parameters.groupId" value="EBIZ_SELLER_ORD"/>
	        	<call-simple-method method-name="addUserLoginToSecurityGroup"></call-simple-method>
	        	
	        	<set field="parameters.groupId" value="EBIZ_SELLER_FAC"/>
	        	<call-simple-method method-name="addUserLoginToSecurityGroup"></call-simple-method>
	        	
	        	<set field="parameters.groupId" value="EBIZ_SELLER_SET"/>
	        	<call-simple-method method-name="addUserLoginToSecurityGroup"></call-simple-method>
	        </if-compare>
	        <if-compare operator="equals" value="SELLER_DECLINED" field="parameters.sellerStatusId">
	        	<set field="parameters.groupId" value="EBIZ_SELLER_PRD"/>
	        	<call-simple-method method-name="removeUserLoginFromSecurityGroup"></call-simple-method>
	        	
	        	<set field="parameters.groupId" value="EBIZ_SELLER_ORD"/>
	        	<call-simple-method method-name="removeUserLoginFromSecurityGroup"></call-simple-method>
	        	
	        	<set field="parameters.groupId" value="EBIZ_SELLER_FAC"/>
	        	<call-simple-method method-name="removeUserLoginFromSecurityGroup"></call-simple-method>
	        	
	        	<set field="parameters.groupId" value="EBIZ_SELLER_SET"/>
	        	<call-simple-method method-name="removeUserLoginFromSecurityGroup"></call-simple-method>
	        </if-compare>
        </if-not-empty>

    </simple-method>


	<simple-method method-name="addUserLoginToSecurityGroup">
		<entity-and entity-name="UserLoginSecurityGroup" list="userLoginSecurityGroups" filter-by-date="true">
            <field-map field-name="userLoginId" from-field="parameters.userLoginId"/>
            <field-map field-name="groupId" from-field="parameters.groupId"/>
		</entity-and>
		<if-empty field="userLoginSecurityGroups">
			<set field="securityParams.userLoginId" from-field="parameters.userLoginId"/>
        	<set field="securityParams.groupId" value="parameters.groupId"/>
        	<set field="securityParams.userLogin" from-field="parameters.systemUserLogin"/>
        	<call-service service-name="addUserLoginToSecurityGroup" in-map-name="securityParams"/>
		</if-empty>
	</simple-method>
	<simple-method method-name="removeUserLoginFromSecurityGroup">
		<entity-and entity-name="UserLoginSecurityGroup" list="userLoginSecurityGroups" filter-by-date="true">
            <field-map field-name="userLoginId" from-field="parameters.userLoginId"/>
            <field-map field-name="groupId" from-field="parameters.groupId"/>
		</entity-and>
		<if-not-empty field="userLoginSecurityGroups">
			<remove-list list="userLoginSecurityGroups"/>
		</if-not-empty>
	</simple-method>
	
    <simple-method method-name="createEnterpriseQual" short-description="create EnterpriseQual">
        <now-timestamp field="parameters.fromDate"/>
        <make-value value-field="enterpriseQual" entity-name="EnterpriseQual"/>
        <set-pk-fields value-field="enterpriseQual" map="parameters"/>
        <set-nonpk-fields value-field="enterpriseQual" map="parameters"/>
        <if-not-empty field="parameters._uploadedFile_fileName">
            <set field="uploadedFileParam.dependId" from-field="parameters.partyId" />
            <set field="uploadedFileParam.uploadedFile" from-field="parameters.uploadedFile" />
            <set field="uploadedFileParam._uploadedFile_fileName" from-field="parameters._uploadedFile_fileName" />
            <call-service service-name="uploadedFile" in-map-name="uploadedFileParam">
                <result-to-field result-name="imagePath" />
            </call-service>
            <set field="enterpriseQual.imagePath" from-field="imagePath"/>
        </if-not-empty>
        <create-value value-field="enterpriseQual"/>
    </simple-method>
    
    <simple-method method-name="updateEnterpriseQual" short-description="update EnterpriseQual">
        <entity-one value-field="enterpriseQual" entity-name="EnterpriseQual">
            <field-map field-name="fromDate" from-field="parameters.fromDate"/>
            <field-map field-name="partyId" from-field="parameters.partyId"/>
            <field-map field-name="partyQualTypeId" from-field="parameters.partyQualTypeId"/>
        </entity-one>
        <if-empty field="enterpriseQual"><add-error><fail-message message="更新失败, 当前资质信息不存在"/></add-error></if-empty>
        <check-errors/>
        <set-nonpk-fields value-field="enterpriseQual" map="parameters"/>
        <if-not-empty field="parameters._uploadedFile_fileName">
            <set field="uploadedFileParam.dependId" from-field="parameters.partyId" />
            <set field="uploadedFileParam.uploadedFile" from-field="parameters.uploadedFile" />
            <set field="uploadedFileParam._uploadedFile_fileName" from-field="parameters._uploadedFile_fileName" />
            <call-service service-name="uploadedFile" in-map-name="uploadedFileParam">
                <result-to-field result-name="imagePath" />
            </call-service>
            <set field="enterpriseQual.imagePath" from-field="imagePath"/>
        </if-not-empty>
        <store-value value-field="enterpriseQual"/>
    </simple-method>

    <simple-method method-name="deleteEnterpriseQual" short-description="delete EnterpriseQual">
        <entity-one value-field="enterpriseQual" entity-name="EnterpriseQual">
            <field-map field-name="fromDate" from-field="parameters.fromDate"/>
            <field-map field-name="partyId" from-field="parameters.partyId"/>
            <field-map field-name="partyQualTypeId" from-field="parameters.partyQualTypeId"/>
        </entity-one>
        <if-empty field="enterpriseQual"><add-error><fail-message message="删除失败, 当前资质信息不存在"/></add-error></if-empty>
        <check-errors/>
        <now-timestamp field="nowTimestamp"/>
        <set field="enterpriseQual.thruDate" from-field="nowTimestamp"/>
        <store-value value-field="enterpriseQual"/>
    </simple-method>

	<simple-method method-name="auditEnterpriseQual" short-description="audit EnterpriseQual">
		<!-- approveStatusId -->
		<if-empty field="parameters.partyId">
			<add-error><fail-message message="商家信息不存在"/></add-error>
		</if-empty>
		<check-errors/>

		<!--更新会员状态-->
		<entity-one entity-name="Party" value-field="party">
			<field-map field-name="partyId" from-field="parameters.partyId"/>
		</entity-one>
		<if-compare field="party.partyTypeId" value="PERSON" operator="equals">
			<entity-one entity-name="Person" value-field="entity">
				<field-map field-name="partyId" from-field="parameters.partyId"/>
			</entity-one>
		<else>
			<if-compare field="party.partyTypeId" value="PARTY_GROUP" operator="equals">
				<entity-one entity-name="PartyGroup" value-field="entity">
					<field-map field-name="partyId" from-field="parameters.partyId"/>
				</entity-one>
			</if-compare>
		</else>
		</if-compare>
		<if-not-empty field="entity">
			<set field="entity.approveStatusId" from-field="parameters.approveStatusId"/>
			<store-value value-field="entity"/>
		</if-not-empty>

		<!--全部通过-->
		<if-compare field="parameters.approveStatusId" value="USER_APPROVED" operator="equals">
			<set field="changeStatusId" value="IM_APPROVED"/>
		<else>
			<!--全部拒绝-->
			<if-compare field="parameters.approveStatusId" value="USER_DISAPPROVED" operator="equals">
				<set field="changeStatusId" value="IM_REJECTED"/>
			</if-compare>
		</else>
		</if-compare>

		<if-not-empty field="changeStatusId">
			<entity-and entity-name="EnterpriseQual" list="qualList">
				<field-map field-name="partyId" from-field="parameters.partyId"/>
			</entity-and>
			<if-not-empty field="qualList">
				<iterate entry="qual" list="qualList">
					<set field="qual.statusId" from-field="changeStatusId"/>
					<store-value value-field="qual"/>
				</iterate>
			</if-not-empty>
		</if-not-empty>
	</simple-method>
</simple-methods>
